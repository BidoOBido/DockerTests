version: "3"

services:
  database-postgres-original:
    image: postgres
    container_name: db_original
    ports:
      - 54321:5432
    environment:
      POSTGRES_USER: user_test
      POSTGRES_PASSWORD: PsswrdPstgrs01470258369
      POSTGRES_DB: mocked_data
    volumes:
      - ../postgres/original:/docker-entrypoint-initdb.d

  database-postgres-destination:
    image: postgres
    container_name: db_destination
    ports:
      - 54322:5432
    environment:
      POSTGRES_USER: user_test
      POSTGRES_PASSWORD: PsswrdPstgrs01470258369
      POSTGRES_DB: inconsistence_data
    volumes:
      - ../postgres/destination:/docker-entrypoint-initdb.d

  java-api-producer:
    image: maven:3-jdk-11
    container_name: producer
    volumes:
      - ../java-producer:/home
    depends_on:
      - database-postgres-original
    ports:
        - 18080:8080
    command: >
      tail -F anything
#      bash -c "cd /home && java -jar target/kafkaproducer-0.0.1-SNAPSHOT.jar" && 
    
  java-api-consumer:
    image: maven:3-jdk-11
    container_name: consumer
    volumes:
      - ../java-consumer:/home
    depends_on:
      - kafka
      - database-postgres-destination
    ports:
        - 28080:8080
    command: >
      tail -F anything    
#      bash -c "cd /home && java -jar target/kafkaconsumer-0.0.1-SNAPSHOT.jar" && 

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: localhost

  kafka-topics-generator:
    image: confluentinc/cp-kafka:latest
    container_name: topic
    depends_on:
      - kafka
    command: >
      bash -c
      "sleep 5s &&
      kafka-topics --create --topic=inconsistences --if-not-exists --bootstrap-server=kafka:29092"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092